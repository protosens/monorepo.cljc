{:min-bb-version
 "0.8.0"


 ;; Required by the `doc:module` task.
 ;;
 :pods
 {clj-kondo/clj-kondo {:version "2022.09.08"}}


 ;;;;;


 :tasks
 {quickdoc
  {:doc           "Generate documentation for modules"
   :maestro/doc "Generate a markdown file for each module specifying a path via
                   `:maestro.plugin.quickdoc.path/output`.
                   
                   It will contain a full description of all namespaces belonging to the module,
                   with vars and usage."
   :requires      ([protosens.maestro.plugin.quickdoc])
   :task          (protosens.maestro.plugin.quickdoc/module+)}


  changelog+
  {:doc           "Template all changelogs with the last stable tag"
   :maestro/doc "Changelogs use `{{ next-release }}` as a placeholder for the next
                   stable tag."
   :requires      ([protosens.task.changelog])
   :task          (protosens.task.changelog/main)}


  deps
  {:doc      ""
   :requires ([protosens.maestro]
              [protosens.maestro.plugin.bb]
              [protosens.maestro.plugin.kaocha])
   :task     (do
               (-> (protosens.maestro/sync)
                   (protosens.maestro.plugin.kaocha/sync))
               (protosens.maestro.plugin.bb/sync :module/task))}


  deps:bb:check
  {:doc      ""
   :requires ([protosens.maestro.plugin.bb])
   :task     (protosens.maestro.plugin.bb/check :module/task)}


  expose
  {:doc           "Expose modules meant to be consumed as Git libraries"
   :maestro/doc "By generating a custom `deps.edn` file in the `:meastro/root` of aliases that
                   have a `:maestro.git.lib/name`.
                   
                   Consumers can then require the repository as a Git dependency and point to a
                   particular module using `:deps/root`."
   :requires      ([protosens.maestro.plugin.gitlib])
   :task          (protosens.maestro.plugin.gitlib/expose)}


  expose:local
  {:doc           "Like `expose` but Git URL will point to the repository directory"
   :maestro/doc "Only for testing.
                  
                   Allows testing exposition and running tasks like `req:verify` without having
                   to push commits."
   :requires      ([protosens.maestro.plugin.gitlib])
   :task          (protosens.maestro.plugin.gitlib/expose-local)}




  module:listing
  {:doc           "Generate `./module/README.md`"
   :maestro/doc "Lists all exposed and private modules."
   :requires      ([protosens.maestro.idiom.listing])
   :task          (protosens.maestro.idiom.listing/main "module/README.md")}


  module:readme
  {:doc           "Generate READMEs for all modules"
   :maestro/doc "For each module, writes a header composed of the root and relevant information (link to
                   API, Git dependency info, etc).

                   If `./doc/README.md` exists relative to the root, its content is appended."
   :requires       ([protosens.maestro.idiom.readme])
   :task           (protosens.maestro.idiom.readme/main)}


  lint
  {:doc           "Lint Clojure code throughout the whole repository"
   :maestro/doc "Using `clj-kondo` which must be accessible in the terminal.

                   See the `lint:prepare` task which is necessary for initialization."
   :requires      ([protosens.maestro.plugin.clj-kondo])
   :task          (protosens.maestro.plugin.clj-kondo/lint)}


  lint:prepare
  {:doc           "Prepare for `lint`"
   :maestro/doc "Must be called prior to using the `lint` task and ideally when dependencies are
                   updated. This will lint and cache dependencies as well as copying configuration
                   files."
   :requires      ([protosens.maestro.plugin.clj-kondo])
   :task          (protosens.maestro.plugin.clj-kondo/prepare)}



  release
  {:doc      ""
   :requires ([protosens.task.release])
   :task     (protosens.task.release/now)}


  }}
