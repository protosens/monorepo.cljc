{:min-bb-version "0.8.0",
 :pods #:clj-kondo{clj-kondo {:version "2023.12.15"}},
 :tasks
 {clean
  {:doc "Deletes some temporary directories",
   :requires ([protosens.task.clean]),
   :task (protosens.task.clean/everything)},
  deps
  {:doc "Prepares `deps.edn` for the given aliases",
   :requires ([protosens.task.deps]),
   :task (protosens.task.deps/sync)},
  deps:bb
  {:doc "Syncs `bb.edn` with `bb.maestro.edn` and `deps.maestro.edn`",
   :requires ([protosens.maestro.plugin.bb]),
   :task (protosens.maestro.plugin.bb/sync :module/task)},
  deps:bb:check
  {:doc
   "Checks if `bb.edn` is in sync with `bb.maestro.edn` and `deps.maestro.edn`",
   :requires ([protosens.maestro.plugin.bb]),
   :task (protosens.maestro.plugin.bb/check :module/task)},
  deps:new
  {:doc "Searches for new versions of external dependencies",
   :requires ([protosens.task.deps.new]),
   :task (protosens.task.deps.new/check)},
  deps:nvd
  {:doc
   "Analyses dependencies from `deps.edn` for vulnerabilities (must contain `:ext/nvd-clojure`)",
   :requires ([protosens.task.deps.nvd]),
   :task (protosens.task.deps.nvd/check)},
  expose
  {:doc
   "Generates custom `deps.edn` files for public modules to expose them as gitlibs",
   :requires ([protosens.maestro.plugin.gitlib]),
   :task (protosens.maestro.plugin.gitlib/expose)},
  expose:local
  {:doc
   "Like `expose` but dependencies to other modules are expressed using file paths (for testing)",
   :requires ([protosens.maestro.plugin.gitlib]),
   :task (protosens.maestro.plugin.gitlib/expose-local)},
  git:commit
  {:doc "Runs `git commit` with additional checks like linting",
   :requires ([protosens.task.git]),
   :task (protosens.task.git/commit)},
  lint
  {:doc "Lints `:paths` from `deps.edn` with Clj-kondo",
   :requires ([protosens.maestro.plugin.clj-kondo]),
   :task (protosens.maestro.plugin.clj-kondo/lint)},
  lint:prepare
  {:doc "Prepares everything for `lint`",
   :requires ([protosens.maestro.plugin.clj-kondo]),
   :task (protosens.maestro.plugin.clj-kondo/prepare)},
  nrepl
  {:doc "Runs `deps.edn` with an NREPL server",
   :requires ([protosens.task.nrepl]),
   :task (protosens.task.nrepl/server)},
  quickdoc
  {:doc "Generates API documentation for modules",
   :requires ([protosens.maestro.plugin.quickdoc]),
   :task (protosens.maestro.plugin.quickdoc/module+)},
  readme:listing
  {:doc "Generates `./module/README.md`",
   :requires ([protosens.maestro.plugin.readme]),
   :task (protosens.maestro.plugin.readme/listing)},
  readme:module+
  {:doc "Generates READMEs for all modules",
   :requires ([protosens.maestro.plugin.readme]),
   :task (protosens.maestro.plugin.readme/module+)},
  release
  {:doc "Prepares everything for a full release",
   :requires ([protosens.task.release]),
   :task (protosens.task.release/now)},
  shadow
  {:doc "Runs Shadow-CLJS from `deps.edn`",
   :requires ([protosens.task.shadow]),
   :task (protosens.task.shadow/run)},
  test:bb
  {:doc "Tests current `deps.edn` aliases on Babashka",
   :requires ([protosens.task.bb]),
   :task (protosens.task.bb/test)},
  test:browser
  {:doc
   "Tests current `deps.edn` in the browser with simple compilation",
   :requires ([protosens.task.test.browser]),
   :task (protosens.task.test.browser/run)},
  test:browser:watch
  {:doc "Like `test:browser` but in watch mode",
   :requires ([protosens.task.test.browser]),
   :task (protosens.task.test.browser/watch)},
  test:headless
  {:doc
   "Tests the output of `test:playwright:*` with all supported browsers",
   :requires ([protosens.task]),
   :task
   (protosens.task/shell
    ["./module/task/src/main/bash/test/headless/all.sh"])},
  test:headless:chromium
  {:doc "Tests the output of `test:playwright:*` with Chromium",
   :requires ([protosens.task]),
   :task
   (protosens.task/shell
    ["./module/task/src/main/bash/test/headless/chromium.sh"])},
  test:headless:firefox
  {:doc "Tests the output of `test:playwright:*` with Firefox",
   :requires ([protosens.task]),
   :task
   (protosens.task/shell
    ["./module/task/src/main/bash/test/headless/firefox.sh"])},
  test:headless:webkit
  {:doc "Tests the output of `test:playwright:*` with Webkit",
   :requires ([protosens.task]),
   :task
   (protosens.task/shell
    ["./module/task/src/main/bash/test/headless/webkit.sh"])},
  test:jvm
  {:doc "Tests current `deps.edn` on the JVM",
   :requires ([protosens.task.test.jvm]),
   :task (protosens.task.test.jvm/run)},
  test:jvm:watch
  {:doc "Like `test:jvm` but in watch mode",
   :requires ([protosens.task.test.jvm]),
   :task (protosens.task.test.jvm/run ["--watch"])},
  test:node
  {:doc "Tests the output of `test:node:*` tasks",
   :requires ([protosens.task.node]),
   :task (protosens.task.node/run "private/tmp/test/node.js")},
  test:node:advanced
  {:doc "Like `test:node:simple` but uses advanced compilation",
   :requires ([protosens.task.test.node]),
   :task (protosens.task.test.node/advanced)},
  test:node:simple
  {:doc "Compiles tests from current `deps.edn` for Node",
   :requires ([protosens.task.test.node]),
   :task (protosens.task.test.node/simple)},
  test:node:watch
  {:doc
   "Compiles tests from current `deps.edn` and runs them on Node in watch mode",
   :requires ([protosens.task.test.node]),
   :task (protosens.task.test.node/watch)},
  test:playwright:advanced
  {:doc "Like `test:playwright:simple` but uses advanced compilation",
   :requires ([protosens.task.test.playwright]),
   :task (protosens.task.test.playwright/compile "release")},
  test:playwright:simple
  {:doc
   "Compiles tests from `deps.edn` for headless browser testing with `test:headless:*` tasks",
   :requires ([protosens.task.test.playwright]),
   :task (protosens.task.test.playwright/compile "compile")}},
 :deps
 {org.clojure/clojure #:mvn{:version "1.11.1"},
  babashka/fs #:mvn{:version "0.5.20"},
  lambdaisland/kaocha #:mvn{:version "1.87.1366"},
  babashka/process #:mvn{:version "0.5.21"},
  selmer/selmer #:mvn{:version "1.12.59"},
  clj-kondo/clj-kondo #:mvn{:version "2023.12.15"},
  io.github.borkdude/quickdoc
  #:git{:sha "d9ac51475ea46e1caf9b059f2a72ddfeeec6111c"}},
 :paths
 ["module/task/src/main/clj/"
  "module/calver/src/main/clj/"
  "module/classpath/src/main/clj/"
  "module/process/src/main/clj/"
  "module/deps.edn/src/main/clj/"
  "module/edn/src/main/clj/"
  "module/namespace/src/main/clj/"
  "module/git/src/main/clj/"
  "module/string/src/main/clj/"
  "module/maestro/src/main/clj/"
  "module/graph.dfs/src/main/clj/"
  "module/term.style/src/main/clj/"
  "module/maestro.plugin.bb/src/main/clj/"
  "module/maestro.plugin.changelog/src/main/clj/"
  "module/maestro.plugin.clj-kondo/src/main/clj/"
  "module/maestro.plugin.gitlib/src/main/clj/"
  "module/maestro.plugin.kaocha/src/main/clj/"
  "module/maestro.plugin.quickdoc/src/main/clj/"
  "module/maestro.plugin.readme/src/main/clj/"]}
