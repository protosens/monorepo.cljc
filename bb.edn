{:paths
 ["module/maestro/src/main"]

 :tasks
 {:requires ([protosens.maestro.alias         :as $.maestro.alias]
             [protosens.maestro.plugin.kaocha :as $.maestro.plugin.kaocha]
             [protosens.maestro.profile       :as $.maestro.profile]
             [protosens.maestro.required      :as $.maestro.required]
             [protosens.maestro.task          :as $.maestro.task])


  alias:dev
  {:doc  "Print aliases for dev mode - Takes a single alias or a vector or aliases and profiles"
   :task (-> ($.maestro.required/create-basis)
             ($.maestro.required/cli-arg)
             ($.maestro.alias/append+ [:task/dev])
             ($.maestro.profile/append+ '[dev
                                          test])
             ($.maestro.required/search)
             ($.maestro.plugin.kaocha/prepare)
             ($.maestro.required/print))}

  alias:test
  {:doc  "Print aliases for testing - See `alias:dev` for arguments"
   :task (-> ($.maestro.required/create-basis)
             ($.maestro.required/cli-arg)
             ($.maestro.alias/append+ [:task/test])
             ($.maestro.profile/append+ [(with-meta 'test
                                                    {:direct? true})])
             ($.maestro.required/search)
             ($.maestro.plugin.kaocha/prepare)
             ($.maestro.required/print))}

  lint
  {:doc      "Lint the repository using `clj-kondo`"
   :requires ([protosens.maestro.plugin.clj-kondo])
   :task     (protosens.maestro.plugin.clj-kondo/lint)}

  lint:prepare
  {:doc      "Lints dependencies using `clj-kondo` and copy configuration files"
   :requires ([protosens.maestro.plugin.clj-kondo])
   :task     (protosens.maestro.plugin.clj-kondo/prepare)}

  pprint-cp
  {:doc      "Pretty-print the classpath received from STDIN - Great match for Clojure CLI `-SPath` argument"
   :requires ([protosens.maestro.classpath])
   :task     (protosens.maestro.classpath/pprint)}

  }}
