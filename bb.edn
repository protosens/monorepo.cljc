{:paths
 ["module/maestro/src/main"]

 :tasks
 {aliases
  {:doc      "Print required aliases given the alias or vector of aliases and profiles"
   :requires ([protosens.maestro])
   :task     (protosens.maestro/task)}

  aliases:dev
  {:doc  "Print aliases for dev mode - See `aliases` for arguments"
   :requires ([protosens.maestro])
   :task     (protosens.maestro/task {:maestro/alias+   [:task/dev]
                                      :maestro/profile+ ['dev
                                                         'test]})}

  aliases:test
  {:doc      "Print aliases for testing - See `alias` for arguments"
   :requires ([protosens.maestro])
   :task     (protosens.maestro/task {:maestro/alias+   [:task/test]
                                      :maestro/profile+ [(with-meta 'test
                                                                    {:direct? true})]})}

  build
  {:doc      "Build the given alias"
   :requires ([protosens.maestro.plugin.build])
   :task     (protosens.maestro.plugin.build/task :tool/maestro)}

  deploy:clojars
  {:doc      "Deploy alias to Clojars: <username> <path-to-token> <alias>"
   :requires ([protosens.maestro.plugin.deps-deploy])
   :task     (protosens.maestro.plugin.deps-deploy/clojars :ext/deps-deploy)}

  deploy:local
  {:doc      "Deploy alias to local Maven cache"
   :requires ([protosens.maestro.plugin.deps-deploy])
   :task     (protosens.maestro.plugin.deps-deploy/local :ext/deps-deploy)}

  lint
  {:doc      "Lint the repository using `clj-kondo`"
   :requires ([protosens.maestro.plugin.clj-kondo])
   :task     (protosens.maestro.plugin.clj-kondo/lint)}

  lint:prepare
  {:doc      "Lints dependencies using `clj-kondo` and copy configuration files"
   :requires ([protosens.maestro.plugin.clj-kondo])
   :task     (protosens.maestro.plugin.clj-kondo/prepare)}

  pprint-cp
  {:doc      "Pretty-print the classpath received from STDIN - Great match for Clojure CLI `-SPath` argument"
   :requires ([protosens.maestro.classpath])
   :task     (protosens.maestro.classpath/pprint)}

  test
  {:doc      "Tests the given alias (or vector of aliases and profiltes)"
   :requires ([protosens.maestro])
   :task     (clojure (str "-M"
                           (with-out-str
                             (protosens.maestro/task {:maestro/alias+   [:task/test]
                                                      :maestro/profile+ [(with-meta 'test
                                                                                    {:direct? true})]}))))}


  }}
